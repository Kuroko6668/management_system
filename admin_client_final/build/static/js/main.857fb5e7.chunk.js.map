{"version":3,"sources":["redux/reducers/login_recuder.js","redux/reducers/product_recuder.js","redux/reducers/category_reducer.js","redux/reducers/index.js","redux/action_types.js","redux/reducers/menu_recuder.js","redux/store.js","redux/action_creators/login_action.js","api/myAxios.js","api/index.js","config/index.js","containers/login/login.jsx","redux/action_creators/menu_action.js","config/menu_config.js","containers/admin/header/header.jsx","containers/admin/left_nav/left_nav.jsx","components/home/home.jsx","containers/category/category.jsx","redux/action_creators/category_action.js","containers/product/product.jsx","redux/action_creators/product_action.js","containers/product/detail.jsx","containers/product/picture_wall.jsx","containers/product/rich_text_editor.jsx","containers/product/add_update.jsx","containers/user/user.jsx","containers/role/role.jsx","containers/bar/bar.jsx","containers/line/line.jsx","containers/pie/pie.jsx","containers/admin/admin.jsx","App.js","index.js","static/imgs/logo.png"],"names":["user","JSON","parse","localStorage","getItem","token","initState","isLogin","combineReducers","userInfo","preState","action","type","data","title","productList","categoryList","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","createDeleteUserInfoAction","removeItem","instance","axios","create","timeout","interceptors","request","use","config","NProgress","start","store","getState","headers","Authorization","method","toLowerCase","Object","qs","stringify","response","done","error","status","message","dispatch","Promise","reqLogin","username","password","myAxios","post","reqCategoryList","get","reqWeather","resolve","reject","jsonp","err","results","weather_data","dayPictureUrl","temperature","weather","reqAddCategory","categoryName","reqUpdateCategory","categoryId","reqProductList","pageNum","pageSize","params","reqUpdateProdStatus","productID","reqSearchProduct","searchType","keyWord","reqProdById","productId","reqDeletePicture","name","reqAddProduct","productObj","reqUpdateProduct","reqRoleList","reqAddRole","roleName","reqAuthRole","roleObj","auth_time","Date","now","reqUserList","reqAddUser","userObj","Item","Login","connect","state","saveUserInfo","value","setItem","handleSubmit","event","preventDefault","props","form","validateFields","values","a","result","msg","history","replace","warning","this","pwdValidator","rule","callback","length","test","getFieldDecorator","to","className","src","logo","alt","onSubmit","rules","required","max","min","pattern","prefix","style","color","placeholder","validator","htmlType","Component","createSaveTitleAction","key","icon","path","children","confirm","Header","deleteUser","saveTitle","withRouter","isFull","date","dayjs","format","weatherInfo","getWeather","setState","fullScreen","screenfull","toggle","logOut","content","cancelText","okText","onOk","getTitle","pathname","location","pathKey","split","reverse","indexOf","menuList","forEach","item","Array","tmp","find","citem","on","timeID","setInterval","clearInterval","size","onClick","SubMenu","LeftNav","menus","role","hasAuth","some","item3","item2","createMenu","target","map","selectedKeys","defaultOpenKeys","splice","mode","theme","Home","display","justifyContent","alignItems","width","height","fontSize","Category","saveCategory","visible","operType","isLoading","modalCurrentValue","modalCurrentId","getCategoryList","showAdd","showUpdate","_id","toAdd","success","unshift","resetFields","toUpdate","categoryObj","handleOk","handleCancel","dataSource","columns","dataIndex","render","align","extra","bordered","rowKey","pagination","showQuickJumper","loading","onCancel","initialValue","Option","Product","saveProduct","current","total","getProductList","number","isSearch","list","updateProdStatus","search","price","push","defaultValue","onChange","margin","allowClear","Detail","desc","detail","imgs","getProdById","id","getCategorylist","match","reduxProdList","reduxCateList","goBack","index","dangerouslySetInnerHTML","__html","getBase64","file","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","previewVisible","previewImage","fileList","getImgArr","setFileList","imgArr","uid","url","handlePreview","preview","originFileObj","handleChange","console","log","uploadButton","listType","onPreview","footer","RichTextEditor","editorState","EditorState","createEmpty","onEditorStateChange","getRichText","draftToHtml","convertToRaw","getCurrentContent","setRichText","html","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","editorStyle","border","paddingLeft","lineHeight","minHeight","AddUpdate","operaType","refs","pictureWall","richTextEditor","labelCol","md","wrapperCol","label","addonAfter","ref","User","isShowAdd","userList","roleList","getUserList","users","roles","time","defaultPageSize","span","TreeNode","Role","isShowAuth","checkedKeys","getRoleList","handleAuthOk","auth_name","handleAuthCancel","onCheck","showAuth","renderTreeNodes","dataRef","treeData","checkable","defaultExpandAll","Bar","sales","inventorys","getOption","text","tooltip","legend","xAxis","yAxis","series","option","Line","Pie","x","trigger","formatter","orient","left","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","getOption2","backgroundColor","top","textStyle","visualMap","show","inRange","colorLightness","sort","b","roseType","normal","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","Math","random","Footer","Sider","Content","Admin","deleteUserInfo","logout","component","exact","App","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.857fb5e7.chunk.js","sourcesContent":["import {SAVE_USER_INFO,DELETE_USER_INFO} from '../action_types'\r\n\r\n//尝试从localStorage中读取之前保存的信息\r\nlet user = JSON.parse(localStorage.getItem('user'))\r\nlet token = localStorage.getItem('token')\r\n\r\n//初始化userInfo数据\r\nlet initState = {\r\n  //若有值，取出使用，没有值，为空\r\n  user: user || '',\r\n  token: token || '',\r\n  isLogin: user && token ? true :false\r\n}\r\n\r\nexport default function test(preState=initState,action) {\r\n  const {type,data} = action\r\n  let newState\r\n  switch (type) {\r\n    case SAVE_USER_INFO: //保存user和token\r\n      const {user,token} = data \r\n      newState = {user,token,isLogin:true}\r\n      return newState\r\n    case DELETE_USER_INFO://删除user和token\r\n      newState = {user:'',token:'',isLogin:false}\r\n      return newState\r\n    default:\r\n      return preState\r\n  }\r\n}","import {SAVE_PROD_LIST} from '../action_types'\r\n\r\n//初始化title数据\r\nlet initState = []\r\n\r\nexport default function test(preState=initState,action) {\r\n  const {type,data} = action\r\n  let newState\r\n  switch (type) {\r\n    case SAVE_PROD_LIST: \r\n      newState = [...data]\r\n      return newState\r\n    default:\r\n      return preState\r\n  }\r\n}","import {SAVE_CATEGORY_LIST} from '../action_types'\r\n\r\n//初始化title数据\r\nlet initState = []\r\n\r\nexport default function test(preState=initState,action) {\r\n  const {type,data} = action\r\n  let newState\r\n  switch (type) {\r\n    case SAVE_CATEGORY_LIST: \r\n      newState = [...data]\r\n      return newState\r\n    default:\r\n      return preState\r\n  }\r\n}","import {combineReducers} from 'redux'\r\nimport loginReducer from './login_recuder'\r\nimport menuRecuder from './menu_recuder'\r\nimport productRecuder from './product_recuder'\r\nimport categoryRecuder from './category_reducer'\r\n\r\n//整合所有reducer汇总所有状态\r\nexport default combineReducers({\r\n  //该对象里的key和value决定着store里保存该状态的key和value\r\n  userInfo:loginReducer,\r\n  title:menuRecuder,\r\n  productList:productRecuder,\r\n  categoryList:categoryRecuder\r\n})\r\n","//防止编码人员犯错误，写错action的名字\r\n\r\n//保存用户信息\r\nexport const SAVE_USER_INFO = 'save_user_info'\r\n//删除用户信息\r\nexport const DELETE_USER_INFO = 'delete_user_info'\r\n//保存头部的标题\r\nexport const SAVE_TITLE = 'save_title'\r\n//保存初始化的、搜索的商品分页信息\r\nexport const SAVE_PROD_LIST = 'save_prod_list'\r\n//保存商品分类信息\r\nexport const SAVE_CATEGORY_LIST = 'save_category_list'\r\n","import {SAVE_TITLE} from '../action_types'\r\n\r\n//初始化title数据\r\nlet initState = ''\r\n\r\nexport default function test(preState=initState,action) {\r\n  const {type,data} = action\r\n  let newState\r\n  switch (type) {\r\n    case SAVE_TITLE: \r\n      newState = data\r\n      return newState\r\n    default:\r\n      return preState\r\n  }\r\n}","//最核心的管理者--store\r\n//从redux中引入createStore，用于创建最核心的store对象\r\nimport {createStore,applyMiddleware} from 'redux' \r\n//引入reducer\r\nimport reducers from './reducers'\r\n//引入redux-thunk\r\nimport thunk from 'redux-thunk'\r\n//引入redux-devtools-extension，用于支持redux开发者调试工具的运行\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nexport default createStore(reducers,composeWithDevTools(applyMiddleware(thunk)))","import {SAVE_USER_INFO,DELETE_USER_INFO} from '../action_types'\r\n\r\n//创建保存用户信息的action\r\nexport const createSaveUserInfoAction = (value)=> {\r\n  //向localStorage中保存用户信息\r\n  localStorage.setItem('user',JSON.stringify(value.user))\r\n  //向localStorage中保存token\r\n  localStorage.setItem('token',value.token)\r\n  return {type:SAVE_USER_INFO,data:value}\r\n}\r\n\r\n//创建删除用户信息的action\r\nexport const createDeleteUserInfoAction = ()=> {\r\n  //从localStorage中删除用户信息\r\n  localStorage.removeItem('user')\r\n   //从localStorage中删除token\r\n  localStorage.removeItem('token')\r\n  return {type:DELETE_USER_INFO}\r\n}\r\n","import axios from 'axios'\r\nimport {message} from 'antd'\r\nimport NProgress from 'nprogress'\r\nimport qs from 'querystring'\r\nimport store from '../redux/store'\r\nimport {createDeleteUserInfoAction} from '../redux/action_creators/login_action'\r\nimport 'nprogress/nprogress.css'\r\n\r\nconst instance = axios.create({\r\n  timeout: 4000,//配置超时时间\r\n});\r\n\r\n//请求拦截器\r\ninstance.interceptors.request.use((config)=> {\r\n  //进度条开始\r\n  NProgress.start()\r\n  //从redux中获取之前所保存的token\r\n  const {token} = store.getState().userInfo\r\n  //向请求头中添加token，用于校验身份\r\n  if(token) config.headers.Authorization = 'atguigu_' + token\r\n  //从配置对象中获取method和data\r\n  const {method,data} = config \r\n  //若是post请求\r\n  if(method.toLowerCase() === 'post'){\r\n    //若传递过来的参数是对象，转换成urlencoded形式\r\n    if(data instanceof Object){\r\n      config.data = qs.stringify(data)\r\n    }\r\n  }\r\n  return config;\r\n});\r\n\r\n//响应拦截器\r\ninstance.interceptors.response.use(\r\n  (response)=>{\r\n    //进度条结束\r\n    NProgress.done()\r\n    //请求若成功，返回真正的数据\r\n    return response.data;\r\n  }, \r\n  (error) => {\r\n    //进度条结束\r\n    NProgress.done()\r\n    if(error.response.status === 401){\r\n      message.error('身份校验失败，请重新登录',1)\r\n      //分发一个删除用户信息的action\r\n      store.dispatch(createDeleteUserInfoAction())\r\n    }else{\r\n      //请求若失败，提示错误（这里可以处理所有请求的异常）\r\n      message.error(error.message,1)\r\n    }\r\n    //中断Promise链\r\n    return new Promise(()=>{})\r\n  }\r\n);\r\n\r\nexport default instance","/* \r\n  1.项目中所有请求由该文件发出\r\n  2.以后每当发请求之前，都要在该文件里添加一个方法\r\n*/\r\n\r\n//引入我们自定义的myAxios\r\nimport myAxios from './myAxios'\r\nimport jsonp from 'jsonp'\r\nimport {message} from 'antd'\r\n//引入请求的基本路径\r\nimport {BASE_URL,WEATHER_AK,CITY} from '../config'\r\n\r\n//登录请求\r\nexport const reqLogin = (username,password)=> myAxios.post(`${BASE_URL}/login`,{username,password})\r\n\r\n//获取商品列表请求\r\nexport const reqCategoryList = ()=> myAxios.get(`${BASE_URL}/manage/category/list`)\r\n\r\n//获取天气信息（百度接口,使用jsonp的方式请求）\r\nexport const reqWeather = ()=>{\r\n  return new Promise((resolve,reject)=>{\r\n      jsonp(`http://api.map.baidu.com/telematics/v3/weather?location=${CITY}&output=json&ak=${WEATHER_AK}`,(err,data)=>{\r\n      if(err){\r\n        message.error('请求天气接口失败，请联系管理员')\r\n        return new Promise(()=>{})\r\n      }else{\r\n        const {dayPictureUrl,temperature,weather} = data.results[0].weather_data[0]\r\n        let weatherObj = {dayPictureUrl,temperature,weather}\r\n        resolve(weatherObj)\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n//新增商品分类\r\nexport const reqAddCategory = ({categoryName})=> myAxios.post(`${BASE_URL}/manage/category/add`,{categoryName})\r\n\r\n//更新一个商品分类\r\nexport const reqUpdateCategory = ({categoryId,categoryName})=> myAxios.post(`${BASE_URL}/manage/category/update`,{categoryId,categoryName})\r\n\r\n//请求商品分页列表\r\nexport const reqProductList = (pageNum,pageSize)=> myAxios.get(`${BASE_URL}/manage/product/list`,{params:{pageNum,pageSize}})\r\n\r\n//请求更新商品状态\r\nexport const reqUpdateProdStatus = (productID,status)=> myAxios.post(`${BASE_URL}/manage/product/updateStatus`,{productID,status})\r\n\r\n//搜索商品\r\nexport const reqSearchProduct = (pageNum,pageSize,searchType,keyWord)=> myAxios.get(`${BASE_URL}/manage/product/search`,{params:{pageNum,pageSize,[searchType]:keyWord}})\r\n\r\n//根据商品id获取商品信息\r\nexport const reqProdById = (productId)=> myAxios.get(`${BASE_URL}/manage/product/info`,{params:{productId}})\r\n\r\n//请求删除图片（根据图片唯一名删除）\r\nexport const reqDeletePicture = (name)=> myAxios.post(`${BASE_URL}/manage/img/delete`,{name})\r\n\r\n//请求添加商品\r\nexport const reqAddProduct = (productObj)=> myAxios.post(`${BASE_URL}/manage/product/add`,{...productObj})\r\n\r\n//请求更新商品\r\nexport const reqUpdateProduct = (productObj)=> myAxios.post(`${BASE_URL}/manage/product/update`,{...productObj})\r\n\r\n//请求所有角色列表\r\nexport const reqRoleList = ()=> myAxios.get(`${BASE_URL}/manage/role/list`)\r\n\r\n//请求添加角色\r\nexport const reqAddRole = ({roleName})=> myAxios.post(`${BASE_URL}/manage/role/add`,{roleName})\r\n\r\n//请求给角色授权export const reqAddRole = ({roleName})=> myAxios.post(`${BASE_URL}/manage/role/add`,{roleName})\r\nexport const reqAuthRole = (roleObj)=> myAxios.post(`${BASE_URL}/manage/role/update`,{...roleObj,auth_time:Date.now()})\r\n\r\n//请求获取所有用户列表（同时携带着角色列表）\r\nexport const reqUserList = ()=> myAxios.get(`${BASE_URL}/manage/user/list`)\r\n\r\n//请求添加用户\r\nexport const reqAddUser = (userObj)=> myAxios.post(`${BASE_URL}/manage/user/add`,{...userObj})\r\n","/* 该文件为项目的配置文件，保存着通用性的配置，以及变量。 */\r\n\r\n/* 发送请求基本路径，当前在开发环境，给自己的代理服务器发请求，\r\n若项目上线，配置成真正服务器的地址。 */\r\nexport const BASE_URL = '/api' \r\n//百度天气接口的AK\r\nexport const WEATHER_AK = '3p49MVra6urFRGOT9s8UBWr2' \r\n//当前城市名\r\nexport const CITY = 'dublin' \r\n//表格每页展示条数\r\nexport const PAGE_SIZE = 5\r\n\r\n","import React,{Component} from 'react'\r\nimport {Form,Icon,Input,Button,message} from 'antd';\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {createSaveUserInfoAction} from '../../redux/action_creators/login_action'\r\nimport {reqLogin} from '../../api'\r\nimport './css/login.less'\r\nimport logo from '../../static/imgs/logo.png'\r\nconst {Item} = Form\r\n\r\n@connect(\r\n  state => ({isLogin:state.userInfo.isLogin}),\r\n  {\r\n    saveUserInfo:createSaveUserInfoAction,\r\n  }\r\n)\r\n@Form.create()\r\nclass Login extends Component{\r\n\r\n  //点击登录按钮的回调\r\n  handleSubmit = (event)=>{\r\n    //阻止默认事件--禁止form表单提交---通过ajax发送\r\n    event.preventDefault();\r\n    //表单的统一验证\r\n    this.props.form.validateFields(async(err, values) => {\r\n      //获取用户输入\r\n      const {username,password} = values\r\n      if(!err){\r\n        //若用户输入无错误，发送登录请求\r\n        let result = await reqLogin(username,password)\r\n        //从响应中获取：请求状态、错误信息、数据\r\n        const {status,msg,data} = result\r\n        if(status === 0){\r\n          //1.服务器返回的user信息，还有token交由redux管理\r\n          this.props.saveUserInfo(data)\r\n          //2.跳转admin页面\r\n          this.props.history.replace('/admin')\r\n        }else message.warning(msg,1)\r\n      }else message.error('incorrrect content, please check')\r\n    });\r\n  }\r\n\r\n  //密码的验证器---每当在密码输入框输入东西后，都会调用此函数去验证输入是否合法。自定义校验，即：自己写判断\r\n  pwdValidator = (rule,value,callback)=>{\r\n    if(!value){\r\n      callback('Username must be entered!')\r\n    }else if(value.length>12){\r\n      callback('Username must be less than or equal to 12 digits')\r\n    }else if(value.length<4){\r\n      callback('Username must be greater than or equal to 4 digits')\r\n    }else if(!(/^\\w+$/).test(value)){\r\n      callback('User name must be a combination of letters, numbers and underscores')\r\n    }else{\r\n      callback()\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const {getFieldDecorator} = this.props.form;\r\n    //从redux中获取用户的登录状态\r\n    const {isLogin} = this.props;\r\n    //如果已经登录了，重定向到admin页面\r\n    if(isLogin)return <Redirect to=\"/admin/home\"/>\r\n    return (\r\n      <div className=\"login\">\r\n        <header>\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>Inventory System</h1>\r\n        </header>\r\n        <section>\r\n          <h1>sign in</h1>\r\n          <h4>default user name:admin</h4>\r\n          <h4>default password:admin</h4>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Item>\r\n            {getFieldDecorator('username', {\r\n                rules: [\r\n                  {required: true, message: 'Username must be entered!'},\r\n                  {max: 12, message: 'Username must be less than or equal to 12 digits'},\r\n                  {min: 4, message: 'Username must be greater than or equal to 4 digits'},\r\n                  {pattern: /^\\w+$/, message: 'User name must be a combination of letters, numbers and underscores'},\r\n                ],\r\n              })(\r\n                <Input \r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)'}}/>}\r\n                    placeholder=\"user name\"\r\n                />,\r\n              )}\r\n            </Item>\r\n            <Item>\r\n            {getFieldDecorator('password', {\r\n                rules: [\r\n                  {validator: this.pwdValidator},\r\n                ],\r\n              })(\r\n                <Input\r\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  type=\"password\"\r\n                  placeholder=\"password\"\r\n                />\r\n              )}\r\n            </Item>\r\n            <Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                sign in\r\n              </Button>\r\n            </Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Login\r\n\r\n","import {SAVE_TITLE} from '../action_types'\r\n\r\n//创建保存用户信息的action\r\nexport const createSaveTitleAction = (value)=> {\r\n  return {type:SAVE_TITLE,data:value}\r\n}\r\n","//项目的菜单配置\r\nexport default[\r\n  {\r\n    title: 'home', // 菜单标题名称\r\n    key: 'home', // 对应的path\r\n    icon: 'home', // 图标名称\r\n    path: '/admin/home'//对应路径\r\n  },\r\n  {\r\n    title: 'product',\r\n    key: 'prod_about',\r\n    icon: 'appstore',\r\n    children: [ // 子菜单列表\r\n      {\r\n        title: 'category',\r\n        key: 'category',\r\n        icon: 'unordered-list',\r\n        path: '/admin/prod_about/category'\r\n      },\r\n      {\r\n        title: 'product',\r\n        key: 'product',\r\n        icon: 'tool',\r\n        path: '/admin/prod_about/product'\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: 'user management',\r\n    key: 'user',\r\n    icon: 'user',\r\n    path: '/admin/user'\r\n  },\r\n  {\r\n    title: 'role management',\r\n    key: 'role',\r\n    icon: 'safety',\r\n    path: '/admin/role'\r\n  },\r\n\r\n  {\r\n    title: 'charts',\r\n    key: 'charts',\r\n    icon: 'area-chart',\r\n    children: [\r\n      {\r\n        title: 'bar',\r\n        key: 'bar',\r\n        icon: 'bar-chart',\r\n        path: '/admin/charts/bar'\r\n      },\r\n      {\r\n        title: 'line',\r\n        key: 'line',\r\n        icon: 'line-chart',\r\n        path: '/admin/charts/line'\r\n      },\r\n      {\r\n        title: 'pie',\r\n        key:  'pie',\r\n        icon: 'pie-chart',\r\n        path: '/admin/charts/pie'\r\n      },\r\n    ]\r\n  },\r\n]\r\n","import React,{Component} from 'react'\r\nimport {Icon,Button,Modal} from 'antd'\r\nimport {withRouter} from 'react-router-dom' //在非路由组件中，要使用路由组件的api，借助withRouter实现\r\nimport screenfull from 'screenfull'\r\nimport {connect} from 'react-redux'\r\nimport dayjs from 'dayjs'\r\nimport {createDeleteUserInfoAction} from '../../../redux/action_creators/login_action'\r\nimport {createSaveTitleAction} from '../../../redux/action_creators/menu_action'\r\nimport menuList from '../../../config/menu_config'\r\nimport {reqWeather} from '../../../api'\r\nimport './header.less'\r\nconst {confirm} = Modal;\r\n\r\n@connect(\r\n  state => ({\r\n    userInfo:state.userInfo,\r\n    title:state.title\r\n  }),\r\n  {\r\n    deleteUser:createDeleteUserInfoAction,\r\n    saveTitle:createSaveTitleAction\r\n  }\r\n)\r\n@withRouter\r\nclass Header extends Component{\r\n\r\n  state = {\r\n    isFull:false,\r\n    date:dayjs().format('MM/DD/YYYY HH:mm:ss'),\r\n    weatherInfo:{},\r\n    title:''\r\n  }\r\n\r\n  //获取天气数据\r\n  getWeather = async()=>{\r\n    let weather = await reqWeather()\r\n    this.setState({weatherInfo:weather})\r\n  }\r\n\r\n  componentDidMount(){\r\n    //给screenfull绑定监听\r\n    screenfull.on('change', () => {\r\n      let isFull = !this.state.isFull\r\n      this.setState({isFull})\r\n    });\r\n    //更新时间\r\n    this.timeID = setInterval(()=>{\r\n      this.setState({date:dayjs().format('MM/DD/YYYY HH:mm:ss')})\r\n    },1000)\r\n\r\n    //展示当前菜单名称\r\n    this.getTitle()\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    //清除更新时间定时器\r\n    clearInterval(this.timeID)\r\n  }\r\n\r\n  //切换全屏按钮的回调\r\n  fullScreen = ()=>{\r\n    screenfull.toggle()\r\n  }\r\n\r\n  //点击退出登录的回调\r\n  logOut = ()=>{\r\n    let {deleteUser,saveTitle} = this.props\r\n    confirm({\r\n      title: 'are you sure to sign out?',\r\n      content: 'if you log out, you need to sign in again',\r\n      cancelText:'cancel',\r\n      okText:'confirm',\r\n      onOk(){\r\n        saveTitle('')\r\n        deleteUser()\r\n      },\r\n    });\r\n  }\r\n\r\n  getTitle = ()=>{\r\n    let {pathname} = this.props.location\r\n    let pathKey = pathname.split('/').reverse()[0]\r\n    if(pathname.indexOf('product') !== -1) pathKey = 'product'\r\n    let title = ''\r\n    menuList.forEach((item)=>{\r\n      if(item.children instanceof Array){\r\n       let tmp =  item.children.find((citem)=>{\r\n          return citem.key === pathKey\r\n        })\r\n       if(tmp) title = tmp.title\r\n      }else{\r\n        if( pathKey === item.key) title = item.title\r\n      }\r\n    })\r\n    this.setState({title})\r\n  }\r\n\r\n  render(){\r\n    let {isFull,weatherInfo} = this.state\r\n    let {user} = this.props.userInfo\r\n    return (\r\n      <header className=\"header\">\r\n        <div className=\"header-top\">\r\n            <Button size=\"small\" onClick={this.fullScreen}>\r\n              <Icon type={isFull ? 'fullscreen-exit':'fullscreen'}/>\r\n            </Button>\r\n            <span className=\"username\">Welcome, {user.username}</span>\r\n            <Button type=\"link\" onClick={this.logOut} >Sign out</Button>\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n            <div className=\"header-bottom-left\">\r\n              {this.props.title || this.state.title}\r\n            </div>\r\n            <div className=\"header-bottom-right\">\r\n              {this.state.date}\r\n            </div>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\nexport default Header\r\n","import React, { Component } from 'react'\r\nimport {Menu, Icon} from 'antd';\r\nimport {Link,withRouter} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {createSaveTitleAction} from '../../../redux/action_creators/menu_action'\r\nimport logo from '../../../static/imgs/logo.png'\r\nimport menuList from '../../../config/menu_config'\r\nimport './left_nav.less'\r\nconst {SubMenu,Item} = Menu;\r\n\r\n@connect(\r\n  state => ({\r\n    menus:state.userInfo.user.role.menus,\r\n    username:state.userInfo.user.username,\r\n  }),\r\n  {\r\n    saveTitle:createSaveTitleAction\r\n  }\r\n)\r\n@withRouter\r\nclass LeftNav extends Component {\r\n\r\n  componentDidMount(){\r\n    //console.log(this.props.location.pathname.split('/').splice(2));\r\n  }\r\n\r\n  hasAuth = (item)=>{\r\n    //获取当前用户可以看到的菜单的数组\r\n    const {menus,username} = this.props\r\n    //console.log(this.props.menus); //[ 'home','category','user','line']\r\n    //console.log(item);//{title: \"首页\", key: \"home\", icon: \"home\", path: \"/admin/home\"}\r\n    //如果是超级管理员，可以查看所有菜单\r\n    if(username === 'admin') return true\r\n    //如果没有子菜单，看当前菜单的key是否在menus中\r\n    else if(!item.children){\r\n      return menus.find((item2)=> item2 === item.key)\r\n    }\r\n    //如果有子菜单，看子菜单里的每一个菜单是否包含在menus中\r\n    else if (item.children){\r\n      return item.children.some((item3)=> menus.indexOf(item3.key) !== -1)\r\n    }\r\n  }\r\n\r\n\r\n  //用于创建菜单的函数\r\n  createMenu = (target)=>{\r\n    return target.map((item)=>{\r\n      if(this.hasAuth(item)){\r\n        if(!item.children){\r\n          return (\r\n            <Item key={item.key} onClick={()=>{this.props.saveTitle(item.title)}}>\r\n              <Link to={item.path}>\r\n                <Icon type={item.icon} />\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Item>\r\n          )\r\n        }else{\r\n          return (\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n                  <Icon type={item.icon}/>\r\n                  <span>{item.title}</span>\r\n                </span>\r\n              }\r\n            >\r\n              {this.createMenu(item.children)}\r\n            </SubMenu>\r\n          )\r\n        }\r\n\t\t\t}\r\n\t\t\treturn null\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let {pathname} = this.props.location\r\n    return (\r\n      <div>\r\n        <header className=\"nav-header\">\r\n          <img src={logo} alt=\"\"/>\r\n          <h1>Inventory System</h1>\r\n        </header>\r\n        <Menu\r\n          selectedKeys={pathname.indexOf('product') !== -1 ? 'product': pathname.split('/').reverse()[0]}\r\n          defaultOpenKeys={pathname.split('/').splice(2)}\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n        >\r\n        {\r\n          this.createMenu(menuList)\r\n        }\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default LeftNav\r\n","import React,{Component} from 'react'\r\nimport './home.css'\r\n\r\nexport default class Home extends Component{\r\n  render(){\r\n    return (\r\n      <div className=\"shadow_wrap\" style={{display:'flex',justifyContent:'center',alignItems:'center',width:'100%',height:'100%',fontSize:'34px'}}>\r\n\t\t\t\t<span className=\"floating\">Welcome to Wang's Inventory Management System</span>\r\n\t\t\t</div>\r\n    )\r\n  }\r\n}","import React,{Component} from 'react'\r\nimport {Card,Button,Icon,Table,message,Modal,Form,Input} from 'antd';\r\nimport {connect} from 'react-redux'\r\nimport {createSaveCategoryAction} from '../../redux/action_creators/category_action'\r\nimport {reqCategoryList,reqAddCategory,reqUpdateCategory} from '../../api'\r\nimport {PAGE_SIZE} from '../../config'\r\nconst {Item} = Form\r\n\r\n@connect(\r\n  state => ({}),\r\n  {saveCategory:createSaveCategoryAction}\r\n)\r\n@Form.create()\r\nclass Category extends Component{\r\n\r\n  state = {\r\n    categoryList:[], //商品分类列表\r\n    visible:false,//控制弹窗的展示或隐藏\r\n    operType:'',//操作类型（新增？修改？）\r\n    isLoading:true,//是否处于加载中\r\n    modalCurrentValue:'',//弹窗显示的值---用于数据回显\r\n    modalCurrentId:''//当前修改分类的id\r\n  }\r\n\r\n  componentDidMount(){\r\n    //一上来，就请求商品分类列表\r\n    this.getCategoryList()\r\n  }\r\n\r\n  //获取商品分类列表\r\n  getCategoryList = async()=>{\r\n    let result = await reqCategoryList()\r\n    this.setState({isLoading:false})\r\n    const {status,data,msg} = result\r\n    if(status===0) {\r\n      this.setState({categoryList:data.reverse()})\r\n      //把商品的分类信息放入redux\r\n      this.props.saveCategory(data)\r\n    }\r\n    else message.error(msg,1)\r\n  }\r\n\r\n  //用于展示弹窗--作为新增\r\n  showAdd = () => {\r\n    this.setState({\r\n      operType:'add',//类型更改为添加\r\n      modalCurrentValue:'',//弹窗回显的值\r\n      modalCurrentId:'',//当前操作的id\r\n      visible: true,//展示弹窗\r\n    });\r\n  };\r\n\r\n  //用于展示弹窗--作为修改\r\n  showUpdate = (item) => {\r\n    const {_id,name} = item //获取当前要修改分类的id、name\r\n    this.setState({\r\n      modalCurrentValue:name,//当前名字存入state\r\n      modalCurrentId:_id,//当前操作的id存入stat\r\n      visible: true,//展示弹窗\r\n      operType:'update',//操作方式变为更新\r\n    });\r\n  };\r\n\r\n  //真正执行新增的操作\r\n  toAdd = async(values)=>{\r\n    let result = await reqAddCategory(values)\r\n    const {status,data,msg} = result\r\n    if(status === 0) {\r\n      message.success('New product category successfully added')\r\n      let categoryList = [...this.state.categoryList]\r\n      categoryList.unshift(data)\r\n      this.setState({categoryList,visible: false})\r\n      this.props.form.resetFields()//重置表单\r\n    }\r\n    if(status === 1) message.error(msg,1)\r\n  }\r\n\r\n  toUpdate = async(categoryObj)=>{\r\n    let result = await reqUpdateCategory(categoryObj)\r\n    const {status,msg} = result\r\n    if(status === 0) {\r\n      message.success('Category name updated successfully',1)\r\n      this.getCategoryList()//重新请求商品列表\r\n      this.setState({visible: false}); //隐藏弹窗\r\n      this.props.form.resetFields()//重置表单\r\n    }else{\r\n      message.error(msg,1)\r\n    }\r\n  }\r\n\r\n  //点击弹窗ok按钮的回调\r\n  handleOk = () => {\r\n    const {operType} = this.state\r\n    this.props.form.validateFields((err, values) => {\r\n      if(err) {\r\n        message.warning('There is an error in the form input, please check',1)\r\n        return\r\n      }\r\n      if(operType==='add') this.toAdd(values)\r\n      if(operType==='update'){\r\n        const categoryId = this.state.modalCurrentId\r\n        const categoryName = values.categoryName\r\n        const categoryObj = {categoryId,categoryName}\r\n        this.toUpdate(categoryObj)\r\n      }\r\n    });\r\n  };\r\n\r\n  //点击弹窗取消按钮的回调\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.form.resetFields()\r\n  };\r\n\r\n  render(){\r\n    const dataSource = this.state.categoryList\r\n    let {operType,visible} = this.state\r\n    let {getFieldDecorator} = this.props.form\r\n    \r\n    const columns = [\r\n      {\r\n        title: 'category name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: 'operation',\r\n        //dataIndex: 'key',\r\n        key: 'age',\r\n        render:(item)=>{return <Button type=\"link\" onClick={()=>{this.showUpdate(item)}}>modify category name</Button>},\r\n        width:'25%',\r\n        align:'center'\r\n      },\r\n    ];\r\n    \r\n    return (\r\n      <div>\r\n        <Card \r\n          extra={<Button type=\"primary\" onClick={this.showAdd}><Icon type=\"plus-circle\" />add</Button>}\r\n        >\r\n          <Table \r\n            dataSource={dataSource} \r\n            columns={columns}\r\n            bordered\r\n            rowKey=\"_id\"\r\n            pagination={{pageSize:PAGE_SIZE,showQuickJumper:true}}\r\n            loading={this.state.isLoading}\r\n          />\r\n        </Card>\r\n        <Modal\r\n          title={operType === 'add' ? 'add' : 'modify'}\r\n          visible={visible}\r\n          okText='confirm'\r\n          cancelText='cancel'\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Item>\r\n            {getFieldDecorator('categoryName', {\r\n                initialValue:this.state.modalCurrentValue,\r\n                rules: [\r\n                  {required: true, message: 'Classification name must be entered!'},\r\n                ],\r\n              })(\r\n                <Input \r\n                    placeholder=\"Please enter a category name\"\r\n                />,\r\n              )}\r\n            </Item>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Category","import {SAVE_CATEGORY_LIST} from '../action_types'\r\n\r\n//创建保存用户信息的action\r\nexport const createSaveCategoryAction = (value)=> {\r\n  return {type:SAVE_CATEGORY_LIST,data:value}\r\n}\r\n","import React,{Component} from 'react'\r\nimport {Card,Button,Icon,Select,Input,Table, message} from 'antd';\r\nimport {connect} from 'react-redux'\r\nimport {reqProductList,reqUpdateProdStatus,reqSearchProduct} from '../../api'\r\nimport {createSaveProductAction} from '../../redux/action_creators/product_action'\r\nimport {PAGE_SIZE} from '../../config'\r\nconst {Option} = Select;\r\n\r\n@connect(\r\n  state => ({}),\r\n  {saveProduct:createSaveProductAction}\r\n)\r\nclass Product extends Component{\r\n\r\n  state = {\r\n    productList:[],//商品列表数据(分页)\r\n    current:1,//当前在哪一页\r\n    total:'',//一共有几页\r\n    keyWord:'',//搜索关键词\r\n    searchType:'productName',//搜索类型\r\n    isLoading:true\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getProductList()\r\n  }\r\n\r\n  getProductList = async(number=1)=>{\r\n    const {searchType,keyWord} = this.state\r\n    let result\r\n    if(this.isSearch)result = await reqSearchProduct(number,PAGE_SIZE,searchType,keyWord)\r\n    else result = await reqProductList(number,PAGE_SIZE)\r\n    const {status,data} = result\r\n    if(status===0) {\r\n      this.setState({\r\n        productList:data.list,\r\n        total:data.total,\r\n        current:data.pageNum,\r\n        isLoading:false\r\n      })\r\n      //把获取的商品列表存入到redux中\r\n      this.props.saveProduct(data.list)\r\n    }\r\n    else message.error('failed to get product list')\r\n  }\r\n\r\n  updateProdStatus = async({_id,status})=>{\r\n    let productList = [...this.state.productList]\r\n    if(status === 1) status = 2\r\n    else status = 1\r\n    let result = await reqUpdateProdStatus(_id,status)\r\n    if(result.status===0) {\r\n      message.success('modified successfully')\r\n      productList = productList.map((item)=>{\r\n        if(item._id === _id){\r\n          item.status = status\r\n        }\r\n        return item\r\n      })\r\n      this.setState({productList})\r\n    }\r\n    else message.error('failed')\r\n  }\r\n\r\n  search = async()=>{\r\n    this.isSearch = true\r\n    this.getProductList()\r\n  }\r\n\r\n\r\n  render(){\r\n    const dataSource = this.state.productList\r\n    \r\n    const columns = [\r\n      {\r\n        title: 'name',\r\n        width:'18%',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: 'description',\r\n        dataIndex: 'desc',\r\n        key: 'desc',\r\n      },\r\n      {\r\n        title: 'price',\r\n        dataIndex: 'price',\r\n        key: 'price',\r\n        align:'center',\r\n        width:'9%',\r\n        render: price =>'€'+price\r\n      },\r\n      {\r\n        title: 'status',\r\n        //dataIndex: 'status',\r\n        width:'10%',\r\n        align:'center',\r\n        key: 'status',\r\n        render: (item) =>{\r\n          return (\r\n            <div>\r\n              <Button \r\n                type={item.status === 1 ? 'danger':'primary'}\r\n                onClick={()=>{this.updateProdStatus(item)}}\r\n              >\r\n                {item.status === 1 ? 'pull off':'put on'}\r\n              </Button><br/>\r\n              <span>{item.status === 1 ? 'on':'off'}</span>\r\n            </div>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: 'operation',\r\n        //dataIndex: 'opera',\r\n        width:'10%',\r\n        align:'center',\r\n        key: 'opera',\r\n        render:(item)=>{\r\n          return (\r\n            <div>\r\n              <Button type=\"link\" onClick={()=>{this.props.history.push(`/admin/prod_about/product/detail/${item._id}`)}}>detail</Button><br/>\r\n              <Button type=\"link\" onClick={()=>{this.props.history.push(`/admin/prod_about/product/add_update/${item._id}`)}}>modify</Button>\r\n            </div>\r\n          )\r\n        }\r\n      }\r\n    ];\r\n    return (\r\n      <Card \r\n        title={\r\n          <div>\r\n            <Select defaultValue=\"productName\" onChange={(value)=>{this.setState({searchType:value})}}>\r\n              <Option value=\"productName\">search by name</Option>\r\n              <Option value=\"productDesc\">search by description</Option>\r\n            </Select>\r\n            <Input \r\n              style={{margin:'0px 10px',width:'20%'}} \r\n              placeholder=\"please input key word\"\r\n              allowClear\r\n              onChange={(event)=>{this.setState({keyWord:event.target.value})}}\r\n            />\r\n            <Button type=\"primary\" onClick={this.search}><Icon type=\"search\"/>search</Button>\r\n          </div>\r\n        }\r\n        extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/admin/prod_about/product/add_update')}}><Icon type=\"plus-circle\"/>add product</Button>}\r\n      >\r\n       <Table \r\n        dataSource={dataSource} \r\n        columns={columns}\r\n        bordered\r\n        rowKey='_id'\r\n        loading={this.state.isLoading}\r\n        pagination={{\r\n          total:this.state.total,\r\n          pageSize:PAGE_SIZE,\r\n          current:this.state.current,\r\n          onChange:this.getProductList\r\n        }}\r\n       />\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default Product","import {SAVE_PROD_LIST} from '../action_types'\r\n\r\n//创建保存用户信息的action\r\nexport const createSaveProductAction = (value)=> {\r\n  return {type:SAVE_PROD_LIST,data:value}\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Button,Card,Icon,List, message} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport {reqProdById,reqCategoryList} from '../../api'\r\nimport {BASE_URL} from '../../config'\r\nimport './detail.less'\r\nconst {Item} = List\r\n\r\n@connect(\r\n  state => ({\r\n    productList:state.productList,\r\n    categoryList:state.categoryList\r\n  })\r\n)\r\nclass Detail extends Component {\r\n\r\n  state = {\r\n    categoryId:'',\r\n    categoryName:'',\r\n    desc:'',\r\n    detail:'',\r\n    imgs:[],\r\n    name:'',\r\n    price:'',\r\n    isLoading:true\r\n  }\r\n\r\n  getProdById = async(id)=>{\r\n    let result = await reqProdById(id)\r\n    const {status,data,msg} = result\r\n    if(status === 0) {\r\n      this.categoryId = data.categoryId\r\n      this.setState({...data})\r\n    }\r\n    else message.error(msg)\r\n  }\r\n\r\n  getCategorylist = async()=>{\r\n    let result = await reqCategoryList()\r\n    const {status,data,msg} = result\r\n    if(status===0) {\r\n      let result = data.find((item)=>{\r\n        return item._id === this.categoryId\r\n      })\r\n      if(result) this.setState({categoryName:result.name,isLoading:false})\r\n    } \r\n    else message.error(msg)\r\n  }\r\n\r\n  componentDidMount(){\r\n    const {id} = this.props.match.params\r\n    const reduxProdList = this.props.productList\r\n    const reduxCateList = this.props.categoryList\r\n    if(reduxProdList.length){\r\n      let result = reduxProdList.find((item)=>item._id === id)\r\n      if(result) {\r\n        this.categoryId = result.categoryId\r\n        this.setState({...result})\r\n      }\r\n    }\r\n    else this.getProdById(id)\r\n    if(reduxCateList.length){\r\n      let result = reduxCateList.find((item)=>item._id === this.categoryId)\r\n      this.setState({categoryName:result.name,isLoading:false})\r\n    }\r\n    else this.getCategorylist()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card \r\n        title={\r\n          <div className='left-top'>\r\n            <Button type=\"link\" size=\"small\" onClick={()=>{this.props.history.goBack()}}>\r\n              <Icon type=\"arrow-left\" style={{fontSize:'20px'}}/>\r\n            </Button>\r\n            <span>product detail</span>\r\n          </div>\r\n        }\r\n      >\r\n        <List loading={this.state.isLoading}>\r\n          <Item>\r\n            <span className=\"prod-title\">product name：</span>\r\n            <span>{this.state.name}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"prod-title\">product description：</span>\r\n            <span>{this.state.desc}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"prod-title\">product price：</span>\r\n            <span>{this.state.price}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"prod-title\">product category name：</span>\r\n            <span>{this.state.categoryName}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"prod-title\">product picture：</span>\r\n            {\r\n              this.state.imgs.map((item,index)=>{\r\n                return <img key={index} src={`${BASE_URL}/upload/`+item} alt=\"product picture\" style={{width:'200px'}}/>\r\n              })\r\n            }\r\n          </Item>\r\n          <Item>\r\n            <span className=\"prod-title\">product picture：</span>\r\n            <span dangerouslySetInnerHTML={{__html:this.state.detail}}></span>\r\n          </Item>\r\n        </List>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Detail\r\n","import React, {Component} from 'react'\r\nimport {Upload,Icon,Modal, message} from 'antd';\r\nimport {BASE_URL} from '../../config'\r\nimport {reqDeletePicture} from '../../api'\r\n\r\n//将图片变成base64编码形式\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nexport default class PicturesWall extends Component {\r\n  state = {\r\n    previewVisible: false, //是否展示预览窗\r\n    previewImage: '',//要预览的图片的URL地址或base64编码\r\n    fileList: [],//收集好的所有上传完毕的图片名\r\n  };\r\n\r\n  //从fileList提取出所有该商品对应的图片名字，构建一个数组，供新增商品使用。\r\n  getImgArr = ()=>{\r\n    let result = []\r\n    this.state.fileList.forEach((item)=>{\r\n      result.push(item.name)\r\n    })\r\n    return result\r\n  }\r\n\r\n  setFileList = (imgArr)=>{\r\n    let fileList = []\r\n    imgArr.forEach((item,index)=>{\r\n      fileList.push({uid:-index,name:item,url:`${BASE_URL}/upload/${item}`})\r\n    })\r\n    this.setState({fileList})\r\n  }\r\n\r\n  //关闭预览窗\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  //展示预览窗\r\n  handlePreview = async (file) => {\r\n    //如果图片没有url也没有转换过base64，那么调用如下方法把图片转成base64\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  //当图片状态发生改变的回调\r\n  handleChange = async ({file,fileList}) => {\r\n    //若文件上传成功\r\n    if(file.status === 'done'){\r\n      console.log(file.response.data.url);\r\n      fileList[fileList.length-1].url = file.response.data.url\r\n      fileList[fileList.length-1].name = file.response.data.name\r\n    }\r\n    if(file.status === 'removed'){\r\n      let result = await reqDeletePicture(file.name)\r\n      const {status,msg} = result\r\n      if(status===0) message.success('removed successfully')\r\n      else message.error(msg)\r\n    }\r\n    this.setState({ fileList })\r\n  };\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"clearfix\">\r\n        <Upload\r\n          action={`${BASE_URL}/manage/img/upload`}//发送上传请求的地址\r\n          method=\"post\"\r\n          name=\"image\"\r\n          listType=\"picture-card\"//照片墙的展示方式\r\n          fileList={fileList}//图片列表，一个数组里面包含着多个图片对象{uid:xxxx,name:xxx,status:xxx,url:xxx}\r\n          onPreview={this.handlePreview}//点击预览按钮的回调\r\n          onChange={this.handleChange}//图片状态改变的回调（图片上传中、图片被删除、图片成功上传）\r\n        >\r\n          {fileList.length >= 4 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { EditorState, convertToRaw,ContentState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\n\r\n\r\nexport default class RichTextEditor extends Component {\r\n  state = {\r\n    editorState: EditorState.createEmpty(), //构建一个初始化状态的编辑器+内容\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n\r\n  getRichText = ()=>{\r\n    const {editorState} = this.state\r\n    return draftToHtml(convertToRaw(editorState.getCurrentContent()))\r\n  }\r\n\r\n  setRichText = (html)=>{\r\n    const contentBlock = htmlToDraft(html);\r\n    if (contentBlock) {\r\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      this.setState({\r\n        editorState,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <div>\r\n        <Editor\r\n          editorState={editorState}\r\n          //wrapperClassName=\"demo-wrapper\" //最外侧容器的样式\r\n          //editorClassName=\"demo-editor\"//编辑区域的样式\r\n          editorStyle={{\r\n            border:' 1px solid black',\r\n            paddingLeft:'10px',\r\n            lineHeight: '10px',\r\n            minHeight: '200px'\r\n          }}\r\n          onEditorStateChange={this.onEditorStateChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport {Card,Button,Icon,Form,Input,Select,message} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport {reqCategoryList,reqAddProduct,reqProdById,reqUpdateProduct} from '../../api'\r\nimport PicturesWall from './picture_wall'\r\nimport RichTextEditor from './rich_text_editor'\r\nconst {Item} = Form\r\nconst {Option} = Select\r\n\r\n@connect(\r\n  state => ({\r\n    categoryList:state.categoryList,\r\n    productList:state.productList\r\n  }),\r\n  {}\r\n)\r\n@Form.create()\r\nclass AddUpdate extends Component {\r\n\r\n  state = {\r\n    categoryList:[],//商品分类列表\r\n    operaType:'add',\r\n    categoryId:'',\r\n    name:'',\r\n    desc:'',\r\n    price:'',\r\n    detail:'',\r\n    imgs:[],\r\n    _id:''\r\n  }\r\n\r\n  getCategoryList = async()=>{\r\n    let result = await reqCategoryList()\r\n    const {status,data,msg} = result\r\n    if(status === 0) this.setState({categoryList:data})\r\n    else message.error(msg)\r\n  }\r\n\r\n  getProductList = async(id)=>{\r\n    let result = await reqProdById(id)\r\n    const {status,data} = result\r\n    if(status === 0) {\r\n      this.setState({...data})\r\n      this.refs.pictureWall.setFileList(data.imgs)\r\n      this.refs.richTextEditor.setRichText(data.detail)\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const {categoryList,productList} = this.props\r\n    const {id} = this.props.match.params\r\n    if(categoryList.length)this.setState({categoryList})\r\n    else this.getCategoryList()\r\n    if(id) {\r\n      this.setState({operaType:'update'})\r\n      if(productList.length){\r\n        let result = productList.find((item)=>{\r\n          return item._id === id\r\n        })\r\n        if(result) {\r\n          this.setState({...result})\r\n          this.refs.pictureWall.setFileList(result.imgs)\r\n          this.refs.richTextEditor.setRichText(result.detail)\r\n        }\r\n      }\r\n      else this.getProductList(id)\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  handleSubmit = (event)=>{\r\n    event.preventDefault()\r\n    //从上传组件中获取已经上传的图片数组\r\n    let imgs = this.refs.pictureWall.getImgArr()\r\n    //从富文本组件中获取用户输入的文字转换为富文本的字符串\r\n    let detail = this.refs.richTextEditor.getRichText()\r\n    const {operaType,_id} = this.state\r\n    this.props.form.validateFields(async(err, values) => {\r\n      if(err) return\r\n      let result\r\n      if(operaType === 'add') result = await reqAddProduct({...values,imgs,detail})\r\n      else result = await reqUpdateProduct({...values,imgs,detail,_id})\r\n      const {status,msg} = result\r\n      if(status === 0) {\r\n        message.success('successful!')\r\n        this.props.history.replace('/admin/prod_about/product')\r\n      }\r\n      else message.error(msg)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    const {operaType} = this.state\r\n    return (\r\n        <Card \r\n          title={\r\n            <div>\r\n              <Button type=\"link\" onClick={this.props.history.goBack}>\r\n                <Icon type=\"arrow-left\"/>\r\n                <span>back</span>\r\n              </Button>\r\n              <span>{operaType==='update' ? 'modify' : 'add'}</span>\r\n            </div>}\r\n        >\r\n          <Form \r\n            onSubmit={this.handleSubmit}\r\n            labelCol={{md:2}}\r\n            wrapperCol={{md:7}}\r\n          >\r\n            <Item label=\"product name\">\r\n              {\r\n                getFieldDecorator('name', {\r\n                  initialValue:this.state.name || '',\r\n                  rules: [{required: true, message: 'please input product name' }],\r\n                })(\r\n                  <Input\r\n                    placeholder=\"product name\"\r\n                  />\r\n                )\r\n              }\r\n            </Item>\r\n            <Item label=\"product description\">\r\n              {getFieldDecorator('desc', {\r\n                initialValue:this.state.desc || '',\r\n                rules: [\r\n                  { required: true, message: 'please input product description' },\r\n                ],\r\n              })(\r\n                <Input\r\n                  placeholder=\"product description\"\r\n                />\r\n              )}\r\n            </Item>\r\n            <Item label=\"product price\">\r\n              {getFieldDecorator('price', {\r\n                initialValue:this.state.price || '',\r\n                rules: [\r\n                  { required: true, message: 'please input product price' },\r\n                ],\r\n              })(\r\n                <Input\r\n                  placeholder=\"price\"\r\n                  addonAfter=\"eruo\"\r\n                  prefix=\"€\"\r\n                  type=\"number\"\r\n                />\r\n              )}\r\n            </Item>\r\n            <Item label=\"product category\">\r\n              {getFieldDecorator('categoryId', {\r\n                initialValue:this.state.categoryId || '',\r\n                rules: [\r\n                  { required: true, message: 'please select one category' },\r\n                ],\r\n              })(\r\n                <Select>\r\n                  <Option value=\"\">please select one category</Option>\r\n                  {\r\n                    this.state.categoryList.map((item)=>{\r\n                    return <Option key={item._id} value={item._id}>{item.name}</Option>\r\n                    })\r\n                  }\r\n                </Select>\r\n              )}\r\n            </Item>\r\n            <Item  label=\"picture\" wrapperCol={{md:12}}>\r\n              <PicturesWall ref=\"pictureWall\"/>\r\n            </Item>\r\n            <Item label=\"detail\" wrapperCol={{md:16}}>\r\n              <RichTextEditor ref=\"richTextEditor\"/>\r\n            </Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">submit</Button>\r\n          </Form>\r\n        </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddUpdate\r\n","import React,{Component} from 'react'\r\nimport {Card,Button,Icon,Table, message,Modal,Form,Input,Select} from 'antd';\r\nimport dayjs from 'dayjs'\r\nimport {reqUserList,reqAddUser} from '../../api'\r\nimport {PAGE_SIZE} from '../../config'\r\nconst {Item} = Form\r\nconst {Option} = Select\r\n\r\n@Form.create()\r\nclass User extends Component{\r\n\r\n  state = {\r\n    isShowAdd:false, //是否展示新增弹窗\r\n    userList:[],//用户列表\r\n    roleList:[]//角色列表\r\n  }\r\n\r\n  getUserList = async()=>{\r\n    let result = await reqUserList()\r\n    const {status,data} = result\r\n    if(status === 0) this.setState({\r\n      userList:data.users.reverse(),\r\n      roleList:data.roles\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getUserList()\r\n  }\r\n\r\n  //新增用户弹窗----确定按钮回调\r\n  handleOk = ()=>{\r\n    this.props.form.validateFields(async(err, values) => {\r\n      if(err) return\r\n      let result = await reqAddUser(values)\r\n      const {status,data,msg} = result\r\n      if(status===0){\r\n        message.success('添加用户成功')\r\n        let userList = [...this.state.userList]\r\n        userList.unshift(data)\r\n        this.setState({userList,isShowAdd:false})\r\n      }\r\n      else message.error(msg,1)\r\n    });\r\n  }\r\n\r\n  //新增用户弹窗----取消按钮回调\r\n  handleCancel = ()=>{\r\n    this.setState({isShowAdd:false})\r\n  }\r\n\r\n  \r\n  render(){\r\n    const dataSource = this.state.userList\r\n    const columns = [\r\n      {\r\n        title: 'username',\r\n        dataIndex: 'username',\r\n        key: 'username',\r\n      },\r\n      {\r\n        title: 'email',\r\n        dataIndex: 'email',\r\n        key: 'email',\r\n      },\r\n      {\r\n        title: 'phone number',\r\n        dataIndex: 'phone',\r\n        key: 'phone',\r\n      },\r\n      {\r\n        title: 'register time',\r\n        dataIndex: 'create_time',\r\n        key: 'create_time',\r\n        render: time => dayjs(time).format('MM/DD/YYYY HH:mm:ss')\r\n      },\r\n      {\r\n        title: 'role',\r\n        dataIndex: 'role_id',\r\n        key: 'role_id',\r\n        render:(id)=>{\r\n          let result = this.state.roleList.find((item)=>{\r\n            return item._id === id\r\n          })\r\n          if(result) return result.name\r\n        }\r\n      },\r\n      {\r\n        title: 'option',\r\n        key: 'option',\r\n        render: () => (\r\n          <div>\r\n            <Button \r\n              type='link' \r\n             >modify\r\n            </Button>\r\n            <Button \r\n              type='link' \r\n             >delete\r\n            </Button>\r\n          </div>\r\n          )\r\n      }\r\n    ];\r\n    const {getFieldDecorator} = this.props.form\r\n    return (\r\n      <div>\r\n        <Card\r\n          title={\r\n            <Button type='primary' onClick={()=>{this.setState({isShowAdd:true});this.props.form.resetFields()}}>\r\n              <Icon type=\"plus\"/>register user\r\n            </Button>\r\n          }\r\n        >\r\n          <Table \r\n            dataSource={dataSource} \r\n            columns={columns}\r\n            bordered\r\n            pagination={{defaultPageSize:PAGE_SIZE}}\r\n            rowKey=\"_id\"\r\n          />\r\n        </Card>\r\n        {/* 新增角色提示框 */}\r\n        <Modal\r\n          title=\"add user\"\r\n          visible={this.state.isShowAdd}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          okText=\"confirm\"\r\n          cancelText=\"cancel\"\r\n        >\r\n          <Form labelCol={{span:4}} wrapperCol={{span:16}}>\r\n            <Item label=\"user name\">\r\n              {getFieldDecorator('username', {\r\n                initialValue:'',\r\n                rules: [{required: true, message: 'User name must be entered' },],\r\n              })(<Input placeholder=\"Please enter your username\"/>)}\r\n            </Item>\r\n            <Item label=\"password\" >\r\n              {getFieldDecorator('password', {\r\n                initialValue:'',\r\n                rules: [{required: true, message: 'password must be entered' },],\r\n              })(<Input placeholder=\"please input password\" type=\"password\"/>)}\r\n            </Item>\r\n            <Item label=\"phone number\">\r\n              {getFieldDecorator('phone', {\r\n                initialValue:'',\r\n                rules: [{required: true, message: 'you must input phone number' },],\r\n              })(<Input placeholder=\"please input phone number\"/>)}\r\n            </Item>\r\n            <Item label=\"email\">\r\n              {getFieldDecorator('email', {\r\n                initialValue:'',\r\n                rules: [{required: true, message: 'please input email' },],\r\n              })(<Input placeholder=\"please input email\"/>)}\r\n            </Item>\r\n            <Item label=\"role\">\r\n              {getFieldDecorator('role_id', {\r\n                initialValue:'',\r\n                rules: [{required: true, message: 'please select a role' },],\r\n              })(\r\n                <Select>\r\n                  <Option value=''>please select a role</Option>\r\n                  {\r\n                    this.state.roleList.map((item)=>{\r\n                      return <Option key={item._id} value={item._id}>{item.name}</Option>\r\n                    })\r\n                  }\r\n                </Select>\r\n              )}\r\n            </Item>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User","import React,{Component} from 'react'\r\nimport {Card,Button,Icon,Table, message,Modal,Form,Input,Tree } from 'antd';\r\nimport dayjs from 'dayjs'\r\nimport {reqRoleList,reqAddRole,reqAuthRole} from '../../api'\r\nimport menuList from '../../config/menu_config'\r\nimport {connect} from 'react-redux'\r\nconst {Item} = Form\r\nconst {TreeNode} = Tree;\r\n\r\n@connect(\r\n  state => ({username:state.userInfo.user.username}),\r\n  {}\r\n)\r\n@Form.create()\r\nclass Role extends Component{\r\n\r\n  state = {\r\n    isShowAdd:false,\r\n    isShowAuth:false,\r\n    roleList:[],\r\n    menuList,\r\n    checkedKeys: [],//选中的菜单\r\n    _id:''//当前操作的角色id\r\n  }\r\n\r\n  getRoleList = async()=>{\r\n    let result = await reqRoleList()\r\n    const {status,data} = result\r\n    if(status===0) this.setState({roleList:data})\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getRoleList()\r\n  }\r\n\r\n  //新增角色--确认按钮\r\n  handleOk = ()=>{\r\n    this.props.form.validateFields(async(err, values) => {\r\n      if(err) return\r\n      let result = await reqAddRole(values)\r\n      const {status,msg} = result\r\n      if(status===0) {\r\n        message.success('successfully add a role')\r\n        this.getRoleList()\r\n        this.setState({isShowAdd:false})\r\n      }\r\n      else message.error(msg)\r\n    });\r\n  }\r\n\r\n  //新增角色--取消按钮\r\n  handleCancel = ()=>{\r\n    this.setState({isShowAdd:false})\r\n  }\r\n\r\n  //授权弹窗--确认按钮\r\n  handleAuthOk = async()=>{\r\n    const {_id,checkedKeys} = this.state\r\n    const {username} = this.props\r\n    let result = await reqAuthRole({_id,menus:checkedKeys,auth_name:username})\r\n    const {status,msg} = result\r\n    if(status===0) {\r\n      message.success('authorize a role',1)\r\n      this.setState({isShowAuth:false})\r\n      this.getRoleList()\r\n    }\r\n    else message.error(msg,1)\r\n  }\r\n\r\n  //授权弹窗--取消按钮\r\n  handleAuthCancel = ()=>{\r\n    this.setState({isShowAuth:false})\r\n  }\r\n\r\n  onCheck = checkedKeys => this.setState({ checkedKeys });\r\n\r\n  //用于展示授权弹窗\r\n  showAuth = (id)=>{\r\n    const {roleList} = this.state\r\n    let result = roleList.find((item)=>{\r\n      return item._id === id\r\n    })\r\n    if(result) this.setState({checkedKeys:result.menus})\r\n    this.setState({isShowAuth:true,_id:id})\r\n  }\r\n\r\n  //用于展示新增弹窗\r\n  showAdd = ()=>{\r\n    this.props.form.resetFields()\r\n    this.setState({isShowAdd:true});\r\n  }\r\n\r\n  renderTreeNodes = (data) =>\r\n      data.map(item => {\r\n      if (item.children) {\r\n        return (\r\n          <TreeNode title={item.title} key={item.key} dataRef={item}>\r\n            {this.renderTreeNodes(item.children)}\r\n          </TreeNode>\r\n        );\r\n      }\r\n      return <TreeNode key={item.key} {...item} />;\r\n  });\r\n\r\n  render(){\r\n    const dataSource = this.state.roleList\r\n    const columns = [\r\n      {\r\n        title: 'role name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: 'create time',\r\n        dataIndex: 'create_time',\r\n        key: 'create_time',\r\n        render:(time)=> dayjs(time).format('MM/DD/YYYY HH:mm:ss')\r\n      },\r\n      {\r\n        title: 'authorised time',\r\n        dataIndex: 'auth_time',\r\n        key: 'auth_time',\r\n        render:(time)=> time ? dayjs(time).format('MM/DD/YYYY HH:mm:ss') : ''\r\n      },\r\n      {\r\n        title: 'authorised person ',\r\n        dataIndex: 'auth_name',\r\n        key: 'auth_name',\r\n      },\r\n      {\r\n        title: 'operation',\r\n        key: 'option',\r\n        render: (item) => <Button type='link' onClick={()=>{this.showAuth(item._id)}}>set authorization</Button>\r\n      }\r\n    ];\r\n    //treeData是属性菜单的源数据\r\n    const treeData = this.state.menuList\r\n    const {getFieldDecorator} = this.props.form\r\n    return (\r\n      <div>\r\n        <Card\r\n          title={<Button type='primary' onClick={()=>{this.showAdd()}}>\r\n                  <Icon type=\"plus\"/>\r\n                  add a role\r\n                 </Button>}\r\n          style={{ width: '100% '}}\r\n        >\r\n          <Table \r\n            dataSource={dataSource} \r\n            columns={columns}\r\n            bordered\r\n            pagination={{defaultPageSize:5}}\r\n            rowKey=\"_id\"\r\n          />\r\n        </Card>\r\n        {/* 新增角色提示框 */}\r\n        <Modal\r\n          title=\"add a role\"\r\n          visible={this.state.isShowAdd}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          okText=\"confirm\"\r\n          cancelText=\"cancel\"\r\n        >\r\n          <Form onSubmit={this.handleOk}>\r\n            <Item>\r\n              {getFieldDecorator('roleName', {\r\n                initialValue:'',\r\n                rules: [\r\n                  {required: true, message: 'you must input role name' },\r\n                ],\r\n              })(\r\n                <Input placeholder=\"please input role name\" />\r\n              )}\r\n            </Item>\r\n          </Form>\r\n        </Modal>\r\n        {/* 设置权限提示框 */}\r\n        <Modal\r\n          title=\"set authorization\"\r\n          visible={this.state.isShowAuth}\r\n          onOk={this.handleAuthOk}\r\n          onCancel={this.handleAuthCancel}\r\n          okText=\"confirm\"\r\n          cancelText=\"cancel\"\r\n        >\r\n          <Tree\r\n            checkable //允许选中\r\n            onCheck={this.onCheck}\r\n            checkedKeys={this.state.checkedKeys}\r\n            defaultExpandAll={true}\r\n          >\r\n            <TreeNode title='platform function' key='top'>\r\n              {this.renderTreeNodes(treeData)}\r\n            </TreeNode>\r\n          </Tree>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Role","import React, {Component} from 'react'\r\nimport {Card} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的柱状图路由组件\r\n */\r\nexport default class Bar extends Component {\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20],\r\n    inventorys: [15, 30, 46, 20, 20, 40]\r\n  }\r\n  getOption = () => {\r\n    const {sales, inventorys} = this.state\r\n    return { // 配置对象\r\n      title: {\r\n          text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n          data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n          data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n          name: '销量',\r\n          type: 'bar',\r\n          data: sales\r\n      },{\r\n          name: '库存',\r\n          type: 'bar',\r\n          data: inventorys\r\n      }]\r\n  };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title='柱状图一'>\r\n          <ReactEcharts option={this.getOption()} style={{height: 300}}/>\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的柱状图路由组件\r\n */\r\nexport default class Line extends Component {\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20],\r\n    inventorys: [15, 30, 46, 20, 20, 40]\r\n  }\r\n  getOption = () => {\r\n    const {sales, inventorys} = this.state\r\n    return { // 配置对象\r\n      title: {\r\n          text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n          data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n          data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n          name: '销量',\r\n          type: 'line',\r\n          data: sales\r\n      },{\r\n          name: '库存',\r\n          type: 'line',\r\n          data: inventorys\r\n      }]\r\n  };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title='柱状图一'>\r\n          <ReactEcharts option={this.getOption()} style={{height: 300}}/>\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的柱状图路由组件\r\n */\r\nexport default class Pie extends Component {\r\n  \r\n  getOption = () => {\r\n    return {\r\n        title : {\r\n            text: '用户访问来源',\r\n            x:'center'\r\n        },\r\n        tooltip : {\r\n            trigger: 'item',\r\n            formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n        },\r\n        legend: {\r\n            orient: 'vertical',\r\n            left: 'left',\r\n            data: ['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']\r\n        },\r\n        series : [\r\n            {\r\n                name: '访问来源',\r\n                type: 'pie',\r\n                radius : '55%',\r\n                center: ['50%', '60%'],\r\n                data:[\r\n                    {value:335, name:'直接访问'},\r\n                    {value:310, name:'邮件营销'},\r\n                    {value:234, name:'联盟广告'},\r\n                    {value:135, name:'视频广告'},\r\n                    {value:1548, name:'搜索引擎'}\r\n                ],\r\n                itemStyle: {\r\n                    emphasis: {\r\n                        shadowBlur: 10,\r\n                        shadowOffsetX: 0,\r\n                        shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    };\r\n  }\r\n\r\n  getOption2 = () => {\r\n    return  {\r\n        backgroundColor: '#2c343c',\r\n    \r\n        title: {\r\n            text: 'Customized Pie',\r\n            left: 'center',\r\n            top: 20,\r\n            textStyle: {\r\n                color: '#ccc'\r\n            }\r\n        },\r\n    \r\n        tooltip : {\r\n            trigger: 'item',\r\n            formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n        },\r\n    \r\n        visualMap: {\r\n            show: false,\r\n            min: 80,\r\n            max: 600,\r\n            inRange: {\r\n                colorLightness: [0, 1]\r\n            }\r\n        },\r\n        series : [\r\n            {\r\n                name:'访问来源',\r\n                type:'pie',\r\n                radius : '55%',\r\n                center: ['50%', '50%'],\r\n                data:[\r\n                    {value:335, name:'直接访问'},\r\n                    {value:310, name:'邮件营销'},\r\n                    {value:274, name:'联盟广告'},\r\n                    {value:235, name:'视频广告'},\r\n                    {value:400, name:'搜索引擎'}\r\n                ].sort(function (a, b) { return a.value - b.value; }),\r\n                roseType: 'radius',\r\n                label: {\r\n                    normal: {\r\n                        textStyle: {\r\n                            color: 'rgba(255, 255, 255, 0.3)'\r\n                        }\r\n                    }\r\n                },\r\n                labelLine: {\r\n                    normal: {\r\n                        lineStyle: {\r\n                            color: 'rgba(255, 255, 255, 0.3)'\r\n                        },\r\n                        smooth: 0.2,\r\n                        length: 10,\r\n                        length2: 20\r\n                    }\r\n                },\r\n                itemStyle: {\r\n                    normal: {\r\n                        color: '#c23531',\r\n                        shadowBlur: 200,\r\n                        shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                    }\r\n                },\r\n    \r\n                animationType: 'scale',\r\n                animationEasing: 'elasticOut',\r\n                animationDelay: function (idx) {\r\n                    return Math.random() * 200;\r\n                }\r\n            }\r\n        ]\r\n    };\r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title='饼图一'>\r\n          <ReactEcharts option={this.getOption()} style={{height: 300}}/>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}","import React,{Component} from 'react'\r\nimport {Redirect,Route,Switch} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from 'antd'\r\n//import {reqCategoryList} from '../../api/index'\r\nimport {createDeleteUserInfoAction} from '../../redux/action_creators/login_action'\r\nimport Header from './header/header'\r\nimport LeftNav from './left_nav/left_nav'\r\nimport './css/admin.less'\r\nimport Home from '../../components/home/home'\r\nimport Category from '../category/category'\r\nimport Product from '../product/product'\r\nimport Detail from '../product/detail'\r\nimport AddUpdate from '../product/add_update'\r\nimport User from '../user/user'\r\nimport Role from '../role/role'\r\nimport Bar from '../bar/bar'\r\nimport Line from '../line/line'\r\nimport Pie from '../pie/pie'\r\nconst {Footer, Sider, Content } = Layout;\r\n\r\n@connect(\r\n  state => ({userInfo:state.userInfo}),\r\n  {deleteUserInfo:createDeleteUserInfoAction}\r\n)\r\nclass Admin extends Component{\r\n\r\n  //退出登录的回调\r\n  logout = ()=>{\r\n    //触发redux删除所保存的用户信息\r\n    this.props.deleteUserInfo()\r\n  }\r\n\r\n  //在render里，若想实现跳转，最好用<Redirect>\r\n  render(){\r\n    //从redux中获取user和isLogin\r\n    const {isLogin} = this.props.userInfo\r\n    //判断用户是否登录，若未登录跳转login页面\r\n    if(!isLogin) return <Redirect to=\"/login\"/>\r\n    else{\r\n      return (\r\n        <Layout className=\"admin\">\r\n          <Sider className='sider'>\r\n            <LeftNav/>\r\n          </Sider>\r\n          <Layout>\r\n            <Header className=\"header\">Header</Header>\r\n            <Content className=\"content\">\r\n              <Switch>\r\n                <Route path=\"/admin/home\" component={Home}/>\r\n                <Route path=\"/admin/prod_about/category\" component={Category}/>\r\n                <Route path=\"/admin/prod_about/product\" component={Product} exact/>\r\n                <Route path=\"/admin/prod_about/product/detail/:id\" component={Detail}/>\r\n                <Route path=\"/admin/prod_about/product/add_update\" component={AddUpdate} exact/>\r\n                <Route path=\"/admin/prod_about/product/add_update/:id\" component={AddUpdate}/>\r\n                <Route path=\"/admin/user\" component={User}/>\r\n                <Route path=\"/admin/role\" component={Role}/>\r\n                <Route path=\"/admin/charts/bar\" component={Bar}/>\r\n                <Route path=\"/admin/charts/line\" component={Line}/>\r\n                <Route path=\"/admin/charts/pie\" component={Pie}/>\r\n                <Redirect to=\"/admin/home\"/>\r\n              </Switch>\r\n            </Content>\r\n            <Footer className=\"footer\">\r\n            Google Chrome is recommended for the best user experience\r\n            </Footer>\r\n          </Layout>\r\n        </Layout>\r\n      )\r\n    }\r\n  }\r\n}\r\nexport default Admin\r\n\r\n","import React,{Component} from 'react'\r\nimport {Route,Switch,Redirect} from 'react-router-dom'\r\nimport Login from './containers/login/login' //引入的不是我们定义的那个Login，而是根据我们定义的Login生成的那个新组件\r\nimport Admin from './containers/admin/admin'\r\n\r\nexport default class App extends Component{\r\n  render(){\r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login}/>\r\n          <Route path=\"/admin\" component={Admin}/>\r\n          <Redirect to=\"/admin/home\"/>\r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport {Provider} from 'react-redux'\r\nimport store from './redux/store'\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n  <BrowserRouter>\r\n    <App/>\r\n  </BrowserRouter>\r\n</Provider>\r\n, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.8013a2a6.png\";"],"sourceRoot":""}